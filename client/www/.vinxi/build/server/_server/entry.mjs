import{defaultParseSearch as A,isRedirect as _,isNotFound as S}from"@tanstack/react-router";import{i as F}from"./tiny-invariant.mjs";import{H3Event as h,getRequestURL as H,getResponseStatus as O,getRequestWebStream as P,eventHandler as j}from"h3";import{AsyncLocalStorage as I}from"node:async_hooks";function U(e={}){let t,n=!1;const a=r=>{if(t&&t!==r)throw new Error("Context conflict")};let o;if(e.asyncContext){const r=e.AsyncLocalStorage||globalThis.AsyncLocalStorage;r?o=new r:console.warn("[unctx] `AsyncLocalStorage` is not provided.")}const u=()=>{if(o&&t===void 0){const r=o.getStore();if(r!==void 0)return r}return t};return{use:()=>{const r=u();if(r===void 0)throw new Error("Context is not available");return r},tryUse:()=>u(),set:(r,s)=>{s||a(r),t=r,n=!0},unset:()=>{t=void 0,n=!1},call:(r,s)=>{a(r),t=r;try{return o?o.run(r,s):s()}finally{n||(t=void 0)}},async callAsync(r,s){t=r;const f=()=>{t=r},d=()=>t===r?f:void 0;T.add(d);try{const l=o?o.run(r,s):s();return n||(t=void 0),await l}finally{T.delete(d)}}}}function W(e={}){const t={};return{get(n,a={}){return t[n]||(t[n]=U({...e,...a})),t[n],t[n]}}}const p=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof global<"u"?global:typeof window<"u"?window:{},R="__unctx__",q=p[R]||(p[R]=W()),J=(e,t={})=>q.get(e,t),b="__unctx_async_handlers__",T=p[b]||(p[b]=new Set);function $(e){let t;const n=E(e),a={duplex:"half",method:e.method,headers:e.headers};return e.node.req.body instanceof ArrayBuffer?new Request(n,{...a,body:e.node.req.body}):new Request(n,{...a,get body(){return t||(t=z(e),t)}})}function M(e){return e.web??={request:$(e),url:E(e)},e.web.request}function D(){return L()}const C=Symbol("$HTTPEvent");function K(e){return typeof e=="object"&&(e instanceof h||e?.[C]instanceof h||e?.__is_event__===!0)}function w(e){return function(...t){let n=t[0];if(K(n))t[0]=n instanceof h||n.__is_event__?n:n[C];else{if(!globalThis.app.config.server.experimental?.asyncContext)throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(n=D(),!n)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");t.unshift(n)}return e(...t)}}const E=w(H),B=w(O),z=w(P);function G(){return J("nitro-app",{asyncContext:!!globalThis.app.config.server.experimental?.asyncContext,AsyncLocalStorage:I})}function L(){return G().use().event}function Q(e){return globalThis.MANIFEST[e]}const v="server-fn-return-type",g="server-fn-payload-type",ne=j(V);async function V(e){return X(M(e))}async function X(e,t){var n,a;const o=e.method,u=new URL(e.url,"http://localhost:3000"),r=Object.fromEntries(new URLSearchParams(u.search).entries()),s=r._serverFnId,f=r._serverFnName;if(!s||!f)throw new Error("Invalid request");F(typeof s=="string");const d=(a=await((n=Q("server").chunks[s])==null?void 0:n.import()))==null?void 0:a[f],l=await(async()=>{try{const i=await(async()=>{var m;return e.headers.get(g)==="payload"?[o.toLowerCase()==="get"?(()=>{var y;return(y=A(u.search))==null?void 0:y.payload})():await e.json(),{method:o,request:e}]:e.headers.get(g)==="formData"||(m=e.headers.get("Content-Type"))!=null&&m.includes("multipart/form-data")?[o.toLowerCase()==="get"?(()=>{const{_serverFnId:y,_serverFnName:Y,payload:N}=r;return N})():await e.formData(),{method:o,request:e}]:e.headers.get(g)==="request"?[e,{method:o,request:e}]:await e.json()})(),c=await d(...i);return c instanceof Response?c:_(c)||S(c)?x(c):new Response(c!==void 0?JSON.stringify(c):void 0,{status:B(L()),headers:{"Content-Type":"application/json",[v]:"json"}})}catch(i){return i instanceof Response?i:_(i)||S(i)?x(i):(console.error("Server Fn Error!"),console.error(i),console.info(),new Response(JSON.stringify(i),{status:500,headers:{"Content-Type":"application/json",[v]:"error"}}))}})();if(l.headers.get("Content-Type")==="application/json"){const c=await l.clone().text();c&&JSON.stringify(JSON.parse(c))}return l}function x(e){const{headers:t,...n}=e;return new Response(JSON.stringify(n),{status:200,headers:{"Content-Type":"application/json",[v]:"json",...e.headers||{}}})}export{ne as default};
